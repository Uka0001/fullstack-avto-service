version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRESQL_ROOT_PASSWORD=$DB_PASSWORD
      - POSTGRESQL_DATABASE=$DB_NAME
      - POSTGRESQL_USER=$DB_USER
      - POSTGRESQL_PASSWORD=$DB_PASSWORD
      - POSTGRESQL_TCP_PORT=$POSTGRESDB_LOCAL_PORT
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5432:5432


  api:
    container_name: api
    image: spring-boot-api
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "8080:8080"
#      - "5005:5005"
    depends_on:
      - postgres
    environment:
      "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.PostgreSQLDialect"
      "spring.datasource.url": "jdbc:postgresql://localhost:$POSTGRESDB_LOCAL_PORT/$DB_NAME?createDatabaseIfNotExist=true"
      "spring.datasource.username": "$DB_USER"
      "spring.datasource.password": "$DB_PASSWORD"
      "spring.jpa.hibernate.ddl-auto": "validate"
      "spring.liquibase.change-log": "classpath:db.changelog/db.changelog-master.yaml"
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"

  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - api
    volumes:
      - ./frontend:/src/app:delegated
      - /src/app/node_modules
      - /src/app/.angular